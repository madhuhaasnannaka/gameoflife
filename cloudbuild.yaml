steps:
- name: 'gcr.io/cloud-builders/mvn:3.5.0-jdk-8'
  args: ['package']
- name: 'gcr.io/cloud-builders/docker'
  args: ["build", "-t", "gcr.io/$PROJECT_ID/gameoflife:$COMMIT_SHA", "-t", "gcr.io/$PROJECT_ID/gameoflife:latest", "."]
- name: 'gcr.io/cloud-builders/docker'
  args: ["push", "gcr.io/$PROJECT_ID/gameoflife:$COMMIT_SHA"]
- name: 'gcr.io/cloud-builders/docker'
  args: ["push", "gcr.io/$PROJECT_ID/gameoflife:latest"]
- name: 'gcr.io/cloud-builders/mvn:3.5.0-jdk-8'
  args: 
   - '-Dsonar.projectKey=CI_DEMO_SONAR'
   - '-Dsonar.projectName=GOL'
   - '-Dsonar.projectVersion=1.0'
   - '-Dsonar.web.host=https://sonarcloud.io'
   - '-Dsonar.login=3502bd1b7a0cc9d8679c51b63c1003f4458e22ea'
#sonar.web.port=9000
# Comma-separated paths to directories with sources (required)
# Language
   - '-Dsonar.language=java'
# Comma-separated paths to directories with tests
   - '-Dsonar.tests=src/test/java'
# Comma-separated paths to directories containing the compiled bytecode files corresponding to your source files
   - '-Dsonar.java.binaries=target/classes'
# Tells SonarQube where the unit tests code coverage report is
   - '-Dsonar.jacoco.reportPath=target/jacoco.exec'
# Encoding of the source files
   - '-Dsonar.sourceEncoding=UTF-8'
- name: 'gcr.io/cloud-builders/gke-deploy:stable'
  args:
  - run
  - --image=gcr.io/$PROJECT_ID/gameoflife:latest
  - --location=us-central1-a
  - --cluster=standard-cluster-2
  - --app=gameoflife
  - --expose=8080
  - --namespace=default
options:
    machineType: 'N1_HIGHCPU_8'
